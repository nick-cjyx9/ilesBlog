<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Nick's webspace!</title>
        <link>https://www.nickchen.top</link>
        <description></description>
        <lastBuildDate>Wed, 31 Jan 2024 09:37:39 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <image>
            <title>Nick's webspace!</title>
            <url>https://avatars.githubusercontent.com/u/119087246</url>
            <link>https://www.nickchen.top</link>
        </image>
        <copyright>Copyright (c) 2023 Nick Chen.</copyright>
        <item>
            <title><![CDATA[CESO学习笔记]]></title>
            <link>https://www.nickchen.top/post/ceso_note</link>
            <guid>https://www.nickchen.top/post/ceso_note</guid>
            <pubDate>Wed, 31 Jan 2024 15:17:56 GMT</pubDate>
            <description><![CDATA[2.5就要测试的啥b在1月的最后几天开始学地质学
]]></description>
            <content:encoded><![CDATA[<p>2.5就要测试的啥b在1月的最后几天开始学地质学</p>

<h1 id="《普通地质学》" class="heading"><a href="#《普通地质学》" class="heading-anchor" aria-label="Permalink for 《普通地质学》" tabindex="-1"></a>《普通地质学》</h1>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[GithubActions在一个推送时触发另一个仓库的workflow]]></title>
            <link>https://www.nickchen.top/post/trigger_another_repos_workflow</link>
            <guid>https://www.nickchen.top/post/trigger_another_repos_workflow</guid>
            <pubDate>Sun, 20 Aug 2023 21:14:08 GMT</pubDate>
            <description><![CDATA[实现思路是在子仓库推送时使用Github的REST api触发某个workflow。
]]></description>
            <content:encoded><![CDATA[<p>实现思路是在子仓库推送时使用Github的REST api触发某个workflow。</p>

<h2 id="使用场景：" class="heading"><a href="#使用场景：" class="heading-anchor" aria-label="Permalink for 使用场景：" tabindex="-1"></a>使用场景：</h2>
<ol>
<li>将博文和hexo等generator的source code分开，方便管理（<del>不是很方便</del>，且如果博文全公开不建议这样做</li>
<li>在private的submodule里做修改后，main repo进行构建</li>
</ol>
<h2 id="方法：" class="heading"><a href="#方法：" class="heading-anchor" aria-label="Permalink for 方法：" tabindex="-1"></a>方法：</h2>
<ol>
<li>首先在private的A仓库根目录中创建<code>scripts/trigger.mjs</code>，填入具有workflow权限的token，本地调试需要运行<code>npm install octokit</code>，<strong>注意：被触发的workflow中必须带有workflow_dispatch:以保证能被主动触发</strong></li>
</ol>
<div class="language-js" data-lang="js"><pre class="language-js"><code><span class="token comment">// Octokit.js</span>
<span class="token comment">// https://github.com/octokit/core.js#readme</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Octokit <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"octokit"</span>
<span class="token keyword">const</span> octokit <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Octokit</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token string">'ghp_XXXXXXXXXXXXXXXXXXXXXXXXXXXXX'</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">await</span> octokit<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string">'POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">owner</span><span class="token operator">:</span> <span class="token string">'YOUR-ID'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">repo</span><span class="token operator">:</span> <span class="token string">'YOUR-REPO'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">workflow_id</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
  <span class="token comment">// 这里填写public的B仓库中触发的工作流文件，如 build.yml</span>
  <span class="token literal-property property">ref</span><span class="token operator">:</span> <span class="token string">'main'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">'X-GitHub-Api-Version'</span><span class="token operator">:</span> <span class="token string">'2022-11-28'</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div>
<ol start="2">
<li>创建工作流<code>.github/workflows/push.yml</code>以触发脚本，替换token为至少具有此仓库访问权限的token，你也可以写进secret。</li>
</ol>
<div class="language-yml" data-lang="yml"><pre class="language-yml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> upstream_trigger
<span class="token key atrule">on</span><span class="token punctuation">:</span>
    <span class="token key atrule">push</span><span class="token punctuation">:</span> 
<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
    <span class="token key atrule">trigger</span><span class="token punctuation">:</span>
        <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
        <span class="token key atrule">steps</span><span class="token punctuation">:</span>
          <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Check out repo content
            <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
            <span class="token key atrule">with</span><span class="token punctuation">:</span>
              <span class="token key atrule">token</span><span class="token punctuation">:</span> <span class="token string">'ghp_XXXXXXXXXXXXXXXXXXXXXXXXXXXXX'</span>
          <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Setup Node
            <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v3
            <span class="token key atrule">with</span><span class="token punctuation">:</span>
              <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token string">'18.12.1'</span>
              <span class="token key atrule">cache</span><span class="token punctuation">:</span> npm
          <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies
            <span class="token key atrule">run</span><span class="token punctuation">:</span> npm install octokit
    
          <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Run script
            <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
              node scripts/trigger.mjs</span></code></pre></div>
<ol start="3">
<li>如果A仓库是B仓库的submodule的话，B仓库的workflow推荐这样写，不过也有缺点，每次得记得在本地<code>git pull</code></li>
</ol>
<div class="language-yml" data-lang="yml"><pre class="language-yml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> build

<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest
    <span class="token key atrule">steps</span><span class="token punctuation">:</span> 
    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3
      <span class="token key atrule">with</span><span class="token punctuation">:</span>
        <span class="token key atrule">submodules</span><span class="token punctuation">:</span> <span class="token string">'true'</span>
        <span class="token key atrule">token</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ghtoken <span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Update Submodules
      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
        git submodule update --init --remote
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Update submodules" || echo "ignore commit failure, proceed"
        git push || echo "ignore commit failure, proceed"</span>
      <span class="token comment"># https://stackoverflow.com/questions/8123674/how-to-git-commit-nothing-without-an-error</span>
    <span class="token comment"># YOUR BUILD PROCESS HERE</span></code></pre></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[简评：《摇曳露营Δ》]]></title>
            <link>https://www.nickchen.top/post/review_yuru_camp</link>
            <guid>https://www.nickchen.top/post/review_yuru_camp</guid>
            <pubDate>Fri, 18 Aug 2023 12:20:41 GMT</pubDate>
            <description><![CDATA[tl;dr:
《摇曳露营Δ》是芳文社的一部剧情轻松愉快的日常番，节奏和气氛会比较接近《相合之物》。音乐好听，节奏舒缓。第一季主要讲了一群女孩因为露营聚在一起几次露营，第二季更偏向讲人与人之间的关系。如果你正处于有很多时间却不知道做什么或者焦虑于当下的状态，那么这部番更值得一看。
]]></description>
            <content:encoded><![CDATA[<h2 id="tldr" class="heading"><a href="#tldr" class="heading-anchor" aria-label="Permalink for tl;dr:" tabindex="-1"></a>tl;dr:</h2>
<p>《摇曳露营Δ》是芳文社的一部剧情轻松愉快的日常番，节奏和气氛会比较接近《相合之物》。音乐好听，节奏舒缓。第一季主要讲了一群女孩因为露营聚在一起几次露营，第二季更偏向讲人与人之间的关系。如果你正处于有很多时间却不知道做什么或者焦虑于当下的状态，那么这部番更值得一看。</p>

<hr>
<h2 id="信息：" class="heading"><a href="#信息：" class="heading-anchor" aria-label="Permalink for 信息：" tabindex="-1"></a>信息：</h2>
<div style="width:100%;" class="text-center item-center"><a href="https://bgm.tv/subject/262897" target="_blank"><img src="https://lain.bgm.tv/r/800/pic/cover/l/0f/50/262897_d3555.jpg" class="ml-auto mr-auto" alt="cover" style="width:50%"></a><hr><ul>
<li>番剧名称：<strong>ゆるキャン△</strong></li>
<li>官方网站: <strong><a href="https://yurucamp.jp/" rel="nofollow">https://yurucamp.jp/</a></strong></li>
<li>我的评分: <strong>8.X/10</strong></li>
<li>多大程度上想要推荐给别人: <strong>11/10</strong></li>
<li>标签: 日常 治愈 芳文社 <del>女孩子贴贴</del></li>
</ul></div>
<h2 id="评价（含剧透）：" class="heading"><a href="#评价（含剧透）：" class="heading-anchor" aria-label="Permalink for 评价（含剧透）：" tabindex="-1"></a>评价（含剧透）：</h2>
<h3 id="人物：" class="heading"><a href="#人物：" class="heading-anchor" aria-label="Permalink for 人物：" tabindex="-1"></a>人物：</h3>
<ul>
<li>芝麻凛：一眼爱上她的气质，平静、独立、很少有表情，但是又对抚子十分关心（联系不上solo camping的抚子，骑着摩托就去探望），喜欢看书、喜欢狗狗、喜欢单人露营，有自己的热爱并去追求。更何况身边都是一群善良的人，让人不得不羡慕。</li>
<li>抚子：原本只是觉得很萌很萌，之后从她单人露营时招待小孩、花钱给姐姐买暖手宝等等才渐渐喜欢上这个活力、有趣、认真的女孩。</li>
<li>犬山葵：可爱役！<del>平泽唯的异世界同位体</del>，爱生的声音总是那么可爱。可能是类似<a href="https://zh.moegirl.org.cn/zh/%E8%BF%91%E6%B1%9F%E5%BD%BC%E6%96%B9" rel="nofollow">彼方</a>一样的存在，<del>并且她的妹妹叫akarin，不得不产生联想</del>。</li>
<li>大垣：迫害役？类似<a href="https://zh.moegirl.org.cn/%E4%B8%AD%E9%A1%BB%E9%9C%9E" rel="nofollow">ksm</a>一样的（<del>学弱</del>）气氛组。印象最深的是给抚子全家做饭，善良而有领导力。</li>
<li>酒鬼老师：<span class="bg-black !text-black hover:!text-white p-0.5 mx-0.5 inline" title="你知道的太多了！">你和<a href="https://bgm.tv/character/470" rel="nofollow">佐和子</a>到底是什么关系？</span></li>
</ul>
<h3 id="剧情：" class="heading"><a href="#剧情：" class="heading-anchor" aria-label="Permalink for 剧情：" tabindex="-1"></a>剧情：</h3>
<a href="https://smms.app/image/8SmlwfaZ4LgK2bA" target="_blank"><img src="https://s2.loli.net/2023/08/18/8SmlwfaZ4LgK2bA.png"></a>
<p>在沉浸于逃避和自我否定的时候遇到这部番，然后第一次被平淡日常打动。《摇曳露营》的剧情给我带来的不只是富士山的宁静，在感动于人与人之间的互相关心时，我发现了自己似乎越来越“无情”，学校的大家过于专注于自己，我的一切社交似乎都带有增进感情之外的目的。我不会面对自己的朋友，甚至于厌烦他们的分享。原本我认为自己很能理解凛的喜欢独行，但为什么凛遇见抚子之后，她也开始不自觉地和他人分享自己的见闻、和抚子交换星空的照片、从最开始不管躺在地上睡觉的抚子到关心朋友晚上会不会挨冻，这样看来，凛的确变了，我也该试着改变。</p>
<a href="https://smms.app/image/JfWCUAqQ5k2mn67" target="_blank"><img src="https://s2.loli.net/2023/08/18/JfWCUAqQ5k2mn67.png"></a>
<p>善待爱你的人、好好生活、拥抱自然。《摇曳露营》传递的，绝对不是用这些文字能描绘的，所以，去看番吧！</p>
<h2 id="小缺点：" class="heading"><a href="#小缺点：" class="heading-anchor" aria-label="Permalink for 小缺点：" tabindex="-1"></a>小缺点：</h2>
<h3 id="贴贴不够，我要看百合！" class="heading"><a href="#贴贴不够，我要看百合！" class="heading-anchor" aria-label="Permalink for 贴贴不够，我要看百合！" tabindex="-1"></a><del>贴贴不够，我要看百合！</del></h3>
<p>看的时候感觉还是有一些的，现在忘了，等想起来再补吧。</p>
<h2 id="关于文化输出：" class="heading"><a href="#关于文化输出：" class="heading-anchor" aria-label="Permalink for 关于文化输出：" tabindex="-1"></a>关于文化输出：</h2>
<p>看了这部番真的会让人产生露营甚至去富士山的冲动。番剧里也时常出现景区软广，这就是日本式的文化输出。好的“文化输出”应该也能让本地人也感受到那种冲动，<span class="bg-black !text-black hover:!text-white p-0.5 mx-0.5 inline" title="你知道的太多了！">点名《⚪神》</span>。它可以盈利，但不是某些人打着输出的名号赚钱的工具<span class="bg-black !text-black hover:!text-white p-0.5 mx-0.5 inline" title="你知道的太多了！">不敢点名</span>。</p>
<iframe src="//player.bilibili.com/player.html?aid=978642911&amp;bvid=BV1e44y1p7GZ&amp;cid=498605836&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen></iframe>
<h2 id="？？？？" class="heading"><a href="#？？？？" class="heading-anchor" aria-label="Permalink for ？？？？" tabindex="-1"></a>？？？？</h2>
<p>我好想做志摩リン小姐的狗啊。
可是志摩リン小姐说她喜欢的是猫，我哭了。
我知道既不是狗也不是猫的我为什么要哭的。
因为我其实是一只老鼠。
我从没奢望志摩リン小姐能喜欢自己。
我明白的，所有人都喜欢理解余裕上手天才打钱的萌萌的狗狗或者猫猫，没有人会喜欢阴湿带病的老鼠。
但我还是问了志摩リン小姐:“我能不能做你的狗？” 我知道我是注定做不了狗的。
但如果她喜欢狗，我就可以一直在身边看着她了，哪怕她怀里抱着的永远都是狗。
可是她说喜欢的是猫。
她现在还在看着我，还在逗我开心，是因为猫还没有出现，只有我这老鼠每天蹑手蹑脚地从洞里爬出来，远远地和她对视。
等她喜欢的猫来了的时候，我就该重新滚回我的洞了吧。
但我还是好喜欢她，她能在我还在她身边的时候多看我几眼吗？
志摩リン小姐说接下来的每个圣诞夜都要和大家一起过。
我不知道大家指哪些人。
好希望这个集合能够对我做一次胞吞。</p>
<p>猫猫还在害怕志摩リン小姐。 我会去把她爱的猫猫引来的。
我知道稍有不慎，我就会葬身猫口。
那时候志摩リン小姐大概会把我的身体好好地装起来扔到门外吧。
那我就成了一包鼠条，嘻嘻。
我希望她能把我扔得近一点，因为我还是好喜欢她。
会一直喜欢下去的。</p>
<p>我的灵魂透过窗户向里面看去，挂着的铃铛在轻轻鸣响，志摩リン小姐慵懒地靠在沙发上，表演得非常温顺的橘猫坐在她的肩膀。
壁炉的火光照在她的脸庞，我冻僵的心脏在风里微微发烫。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[音乐的力量]]></title>
            <link>https://www.nickchen.top/post/music_power</link>
            <guid>https://www.nickchen.top/post/music_power</guid>
            <pubDate>Sun, 30 Jul 2023 15:35:57 GMT</pubDate>
            <description><![CDATA[好久没听过Lube的歌了，前几天天心血来潮去网易云重新听了听《这里的黎明静悄悄》，去年夏天的那种窒息般的情感涌上鼻尖，故作此文（结果两天后就变成vip专享😅）
]]></description>
            <content:encoded><![CDATA[<p>好久没听过Lube的歌了，前几天天心血来潮去网易云重新听了听《这里的黎明静悄悄》，去年夏天的那种窒息般的情感涌上鼻尖，故作此文（<del>结果两天后就变成vip专享😅</del>）</p>

<p>住校的晚上，我总是喜欢在耳机里放点歌，让环境不要太安静，这样才不会感到孤独甚至恐惧。
中考完那个暑假，在前往新高中夏令营时，遭遇疫情。军训，遭遇高温，被困在限电的闷热的宿舍里，一个人远离家乡，也算得上
心情特别 down 的一段时光了。想起初中时<del>精苏</del>朋友的安利，我开始听 Lube 的歌。</p>
<h2 id="lube（柳拜）" class="heading"><a href="#lube（柳拜）" class="heading-anchor" aria-label="Permalink for Lube（柳拜）" tabindex="-1"></a>Lube（柳拜）</h2>
<iframe style="border-radius:12px" src="https://open.spotify.com/embed/artist/4Z2QXZRqTdguBQrM8pr4eD?utm_source=generator" width="100%" height="352" frameborder="0" allowfullscreen allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>
<p>我本来不是很了解苏联的那段历史，就算看着翻译也不能完全理解歌词。但是不知道为何，他们雄厚的嗓音立即使我躁动的心安稳起来。深情、沉稳是我对柳拜的第一感，
高温被困在学校的那几天，我每天都在循环 Lube 的歌，日复一日的无聊、愧疚、孤独感，承载在这些歌上。音乐的力量就体现在音乐给我
带来的长久的记忆中了。</p>
<p>同样的感觉，还有偶然听到《倔强》的时候，这首歌是在中考誓师大会上大家一起唱的歌，一听到前奏，愉快的初中时光就涌入脑中。</p>
<iframe style="border-radius:12px" src="https://open.spotify.com/embed/track/1HvAJPhhs2LnNViKxQ7APT?utm_source=generator" width="100%" height="352" frameborder="0" allowfullscreen allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>
<h2 id="花谱" class="heading"><a href="#花谱" class="heading-anchor" aria-label="Permalink for 花谱" tabindex="-1"></a>花谱</h2>
<iframe style="border-radius:12px" src="https://open.spotify.com/embed/artist/2c32JruIkUyfdycHmhIph4?utm_source=generator" width="100%" height="352" frameborder="0" allowfullscreen allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>
<p>花谱同柳拜一样，都是我喜欢的歌曲特别有表现力的 singer ，我接触到她，最初是2022年春节，日推听到了《不可解》，初听时，只是觉得不一般，便收藏起来，
很久没听过，知道看到ouuan大佬的 about 里提到这首歌，又去细听了《不可解》和她的其他作品，这次，不管是从歌词还是情感，我都被折服了。</p>
<p>23/12/12：
这学期很久没有再捡起听歌的习惯了，现在偶尔会想起《花》的旋律，满满的都是暑假时开心的回忆。</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Hello World!(你好！世界！)]]></title>
            <link>https://www.nickchen.top/post/hello_world</link>
            <guid>https://www.nickchen.top/post/hello_world</guid>
            <pubDate>Wed, 19 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[
中日英测试文案
中文：你好，这是一个中文测试文案。
日文：こんにちは、これは日本語のテスト文書です。
英文：Hello, this is an English test document.
]]></description>
            <content:encoded><![CDATA[<h1 id="markdown语法测试文档generated-by-ai" class="heading"><a href="#markdown语法测试文档generated-by-ai" class="heading-anchor" aria-label="Permalink for Markdown语法测试文档(Generated by AI)" tabindex="-1"></a>Markdown语法测试文档(Generated by AI)</h1>
<h2 id="中日英测试文案" class="heading"><a href="#中日英测试文案" class="heading-anchor" aria-label="Permalink for 中日英测试文案" tabindex="-1"></a>中日英测试文案</h2>
<p>中文：你好，这是一个中文测试文案。</p>
<p>日文：こんにちは、これは日本語のテスト文書です。</p>
<p>英文：Hello, this is an English test document.</p>

<h1 id="一级标题" class="heading"><a href="#一级标题" class="heading-anchor" aria-label="Permalink for 一级标题" tabindex="-1"></a>一级标题</h1>
<h2 id="二级标题" class="heading"><a href="#二级标题" class="heading-anchor" aria-label="Permalink for 二级标题" tabindex="-1"></a>二级标题</h2>
<h3 id="三级标题" class="heading"><a href="#三级标题" class="heading-anchor" aria-label="Permalink for 三级标题" tabindex="-1"></a>三级标题</h3>
<h4 id="四级标题" class="heading"><a href="#四级标题" class="heading-anchor" aria-label="Permalink for 四级标题" tabindex="-1"></a>四级标题</h4>
<h5 id="五级标题" class="heading"><a href="#五级标题" class="heading-anchor" aria-label="Permalink for 五级标题" tabindex="-1"></a>五级标题</h5>
<h6 id="六级标题" class="heading"><a href="#六级标题" class="heading-anchor" aria-label="Permalink for 六级标题" tabindex="-1"></a>六级标题</h6>
<h2 id="文本样式" class="heading"><a href="#文本样式" class="heading-anchor" aria-label="Permalink for 文本样式" tabindex="-1"></a>文本样式</h2>
<p><strong>粗体文本</strong><br>
<em>斜体文本</em><br>
<del>删除线文本</del><br>
<code>代码文本</code></p>
<h2 id="列表" class="heading"><a href="#列表" class="heading-anchor" aria-label="Permalink for 列表" tabindex="-1"></a>列表</h2>
<h3 id="无序列表" class="heading"><a href="#无序列表" class="heading-anchor" aria-label="Permalink for 无序列表" tabindex="-1"></a>无序列表</h3>
<ul>
<li>列表项1</li>
<li>列表项2</li>
<li>列表项3</li>
</ul>
<h3 id="有序列表" class="heading"><a href="#有序列表" class="heading-anchor" aria-label="Permalink for 有序列表" tabindex="-1"></a>有序列表</h3>
<ol>
<li>列表项1</li>
<li>列表项2</li>
<li>列表项3</li>
</ol>
<h2 id="链接与图片" class="heading"><a href="#链接与图片" class="heading-anchor" aria-label="Permalink for 链接与图片" tabindex="-1"></a>链接与图片</h2>
<h3 id="链接" class="heading"><a href="#链接" class="heading-anchor" aria-label="Permalink for 链接" tabindex="-1"></a>链接</h3>
<p><a href="https://www.baidu.com" rel="nofollow">百度</a><br>
<a href="https://www.google.com" rel="nofollow">谷歌</a></p>
<h3 id="图片" class="heading"><a href="#图片" class="heading-anchor" aria-label="Permalink for 图片" tabindex="-1"></a>图片</h3>
<p><img src="https://markdown-here.com/img/icon256.png" alt="Markdown Logo"></p>
<h2 id="引用" class="heading"><a href="#引用" class="heading-anchor" aria-label="Permalink for 引用" tabindex="-1"></a>引用</h2>
<blockquote>
<p>这是一个引用文本。</p>
</blockquote>
<h2 id="代码块" class="heading"><a href="#代码块" class="heading-anchor" aria-label="Permalink for 代码块" tabindex="-1"></a>代码块</h2>
<div class="language-javascript" data-lang="javascript"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Hello World!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre></div>
<div class="language-python" data-lang="python"><pre class="language-python"><code><span class="token comment"># 仅作长代码高亮演示</span>
<span class="token keyword">from</span> json <span class="token keyword">import</span> dumps
<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep
<span class="token keyword">from</span> requests <span class="token keyword">import</span> get
<span class="token keyword">from</span> re <span class="token keyword">import</span> findall<span class="token punctuation">,</span> <span class="token builtin">compile</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>origin_list<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    item <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    item<span class="token punctuation">[</span><span class="token string">'characterName'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'title="(.*?)"'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>findall<span class="token punctuation">(</span>origin_list<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">'characterName'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">' Getting...'</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span>
    item<span class="token punctuation">[</span><span class="token string">'characterId'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'/character/(\d+)'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>findall<span class="token punctuation">(</span>origin_list<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    item<span class="token punctuation">[</span><span class="token string">'characterAvatar'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">'https:'</span> <span class="token operator">+</span> <span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'&lt;img src="(.*?)">'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>findall<span class="token punctuation">(</span>origin_list<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    characterInfo <span class="token operator">=</span> get<span class="token punctuation">(</span>api_url <span class="token operator">+</span> <span class="token string">'/v0/characters/'</span> <span class="token operator">+</span> item<span class="token punctuation">[</span><span class="token string">'characterId'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
    item<span class="token punctuation">[</span><span class="token string">'characterImg'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token builtin">dict</span> <span class="token operator">=</span> characterInfo<span class="token punctuation">[</span><span class="token string">'images'</span><span class="token punctuation">]</span>
    item<span class="token punctuation">[</span><span class="token string">'characterSummary'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token builtin">str</span> <span class="token operator">=</span> characterInfo<span class="token punctuation">[</span><span class="token string">'summary'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">r'"'</span><span class="token punctuation">,</span><span class="token string">r'\"'</span><span class="token punctuation">)</span>
    item<span class="token punctuation">[</span><span class="token string">'characterInfo'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token builtin">list</span> <span class="token operator">=</span> characterInfo<span class="token punctuation">[</span><span class="token string">'infobox'</span><span class="token punctuation">]</span>
    processed <span class="token operator">=</span> processed <span class="token operator">+</span> dumps<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">r'\n'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">r'\r'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'\n'</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">' Done.'</span><span class="token punctuation">)</span>
    sleep<span class="token punctuation">(</span>sleep_time<span class="token punctuation">)</span></code></pre></div>
<h2 id="表格" class="heading"><a href="#表格" class="heading-anchor" aria-label="Permalink for 表格" tabindex="-1"></a>表格</h2>
<table>
<thead>
<tr>
<th>名称</th>
<th>价格</th>
</tr>
</thead>
<tbody>
<tr>
<td>商品1</td>
<td>$10</td>
</tr>
<tr>
<td>商品2</td>
<td>$20</td>
</tr>
<tr>
<td>商品3</td>
<td>$30</td>
</tr>
</tbody>
</table>
<h2 id="分割线" class="heading"><a href="#分割线" class="heading-anchor" aria-label="Permalink for 分割线" tabindex="-1"></a>分割线</h2>
<hr>
<h2 id="脚注" class="heading"><a href="#脚注" class="heading-anchor" aria-label="Permalink for 脚注" tabindex="-1"></a>脚注</h2>
<p>这是一个带脚注的句子<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref aria-describedby="footnote-label">1</a></sup>。</p>
<h2 id="数学公式" class="heading"><a href="#数学公式" class="heading-anchor" aria-label="Permalink for 数学公式" tabindex="-1"></a>数学公式</h2>
<p>$$
\int_0^1 x^2 dx
$$</p>
<section data-footnotes class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>
<ol>
<li id="user-content-fn-1">
<p>这是一个脚注的内容。 <a href="#user-content-fnref-1" data-footnote-backref class="data-footnote-backref" aria-label="Back to content">↩</a></p>
</li>
</ol>
</section>]]></content:encoded>
        </item>
    </channel>
</rss>